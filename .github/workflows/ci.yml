name: CI
on: [push]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      IMAGE: ghcr.io/mgax/geospatial
    steps:

      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          pull: true
          load: true
          tags: ${{ env.IMAGE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Prepare testing environment
        run: |
          cp docker-compose.testing.yml docker-compose.override.yml
          cp example-docker.env docker.env
          docker-compose up -d
          sleep 2

      - name: Run test suite
        run: |
          docker-compose exec -T app ./manage.py makemigrations --check
          docker-compose exec -T app pytest

      - name: Show logs
        if: ${{ always() }}
        run: |
          docker-compose ps
          docker-compose logs

      - name: Log in to the Container registry
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          docker push $IMAGE
